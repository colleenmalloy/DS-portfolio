plot(sqft, trans_value,
xlab = "Square Footage of Home",
ylab = "Transaction Value",
main = "Square Footage by Transaction Value")
housing %>%
ggplot(sqft, trans_value,
xlab = "Square Footage of Home",
ylab = "Transaction Value",
main = "Square Footage by Transaction Value")
housing %>%
ggplot(sqft, trans_value
#2.3
housing %>%
housing %>%
ggplot(aes(x = sqft, y = trans_value)+
labs(x = "Square Footage of Home",
y = "Transaction Value",
title = "Square Footage by Transaction Value"))
housing %>%
ggplot(aes(x = sqft, y = trans_value
#2.3
housing %>%
housing %>%
ggplot(aes(x = sqft, y = trans_value)+
geom_point()+
labs(x = "Square Footage of Home",
y = "Transaction Value",
title = "Square Footage by Transaction Value"))
housing %>%
ggplot(aes(x = sqft, y = trans_value))+
geom_point()+
labs(x = "Square Footage of Home",
y = "Transaction Value",
title = "Square Footage by Transaction Value")
#2.3
housing %>%
ggplot(aes(x = sqft, y = trans_value))+
geom_point()+
labs(x = "Square Footage of Home",
y = "Transaction Value ($)",
title = "Square Footage by Transaction Value")
housing %>%
ggplot(aes(x = pool, y = trans_value)) +
geom_point() +
facet_wrap(~ pool, nrow = 2)
# 2.4
housing %>%
ggplot(aes(x = pool, y = trans_value, color = pool)) +
geom_point()
housing %>%
ggplot(aes(x = , y = trans_value, color = pool)) +
geom_boxplot()
housing %>%
ggplot(aes(x = , y = trans_value,)) +
geom_boxplot()+
facet_wrap(~ pool, nrow = 2)
# 2.4
housing %>%
ggplot(aes(x = , y = trans_value,)) +
geom_boxplot()+
facet_wrap(~ pool, nrow = 2)+
plot_flip()
?flip
ggplot(housing, aes(x = pool, y = trans_value,)) +
geom_boxplot()
housing %>%
ggplot(aes(x = pool, y = trans_value,)) +
geom_boxplot()+
facet_wrap(~ pool, nrow = 2)
housing %>%
ggplot(aes(x = pool, y = trans_value,)) +
geom_boxplot()+
facet_wrap(~ pool, ncol = 2)
View(pools)
pools %>%
ggplot(aes(x = homeType, y = trans_value,)) +
geom_boxplot()+
facet_wrap(~ homeType, ncol = 2)
pools <- housing %>%
select(pool, lotsize, trans_value) %>%
mutate(homeType = factor(pool, levels = c(1, 0),
labels = c("With Pool", "Without Pool")))
pools %>%
ggplot(aes(x = homeType, y = trans_value,)) +
geom_boxplot()+
facet_wrap(~ homeType, ncol = 2)
pools %>%
ggplot(aes(x = homeType, y = trans_value,)) +
geom_boxplot()
pools %>%
ggplot(aes(x = homeType, y = trans_value,)) +
geom_boxplot()+
labs(x = "Type of Home", y = "Transaction Value ($)",
title = "Transaction Value by Whether a House has a Pool or Not")
# The tidyverse collection of packages
library(tidyverse)
# A package for accessing NYC flight data from 2013
library(nycflights13)
# Load in the mtcars data
data(mtcars)
# Load in the Texas housing data
data(txhousing)
# Load in the flights data from nycflights13
data(flights)
?floor
housing %>%
mutate(bath_full = floor(bath))
housing %>%
mutate(bath_full = floor(bath))+
ggplot(aes(x = bath_full, y = bedrms))+
geom_point()
housing %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_point()
housing %>%
mutate(bath_full = floor(bath))
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_point()
txhouse %>%
select(city, volume) %>%
filter(city %in% c("Dallas", "Houston", "Austin"))
# Select only the city and volume columns and filter the results
# to show only rows for the cities Dallas, Houston or Austin
txhousing %>%
select(city, volume) %>%
filter(city %in% c("Dallas", "Houston", "Austin"))
View(txhousing)
txhousing %>%
select(city, volume) %>%
filter(city %in% c("Dallas", "Houston", "Austin"))
# Select only the city and volume columns and filter the results
# to show only rows for the cities Dallas, Houston or Austin
txhousing %>%
select(city, volume) %>%
filter(city %in% c("Dallas", "Houston", "Austin")) %>% view
txhousing %>%
select(city, month, listing) %>%
filter(city %in% !c("Galveston", "Amarillo")) %>%
filter(listing > 1000) %>%
filter(month == "August")
txhousing %>%
select(city, month, listings) %>%
filter(city %in% !c("Galveston", "Amarillo")) %>%
filter(listings > 1000) %>%
filter(month == "August")
txhousing %>%
select(city, month, listings) %>%
filter(!city %in% c("Galveston", "Amarillo")) %>%
filter(listings > 1000) %>%
filter(month == "August")
txhousing %>%
select(city, month, listings) %>%
filter(!city %in% c("Galveston", "Amarillo")) %>%
filter(listings > 1000) %>%
filter(month == "August") %>%  view
txhousing %>%
select(city, month, listings) %>%
filter(!city %in% c("Galveston", "Amarillo")) %>%
filter(listings > 1000) %>%
filter(month == 8) %>%  view
txhousing %>%
filter(!city %in% c("Galveston", "Amarillo")) %>%
filter(listings > 1000) %>%
filter(month == 8) %>%  view
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San"))
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000 && sales > 100)
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000 & sales > 100)
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000 | sales > 100)
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000, sales > 100)
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000, sales > 100) %>%
filter(is.na(median), is.na(sales))
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000, sales > 100) %>%
filter(is.na(median), is.na(sales)) %>% view
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000, sales > 100) %>%
filter(!is.na(median), is.na(sales)) %>%
select(city, median, sales)
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000, sales > 100) %>%
filter(!is.na(median), !is.na(sales)) %>%
select(city, median, sales) %>%  view
# Filter for rows that belong to a city with the word 'San'
# in the city name. Only include results that have either a
# median value of at least 150000 or more than 100 sales.
# Filter out any missing values from the result and
# only include columns where a filter is applied
txhousing %>%
filter(str_detect(city,"San")) %>%
filter(median >= 150000 | sales > 100) %>%
filter(!is.na(median), !is.na(sales)) %>%
select(city, median, sales) %>%  view
data(diamonds)
library(tidyverse)
library(skimr)
diamonds %>%
ggplot(aes(x = carat, y = price)) +
geom_point() +
labs(title = "Relationship between Diamond Size and Price")
##### Slide 19 Bivariate: 2 Discrete #####
# Cross-tabulation table (composition)
table(diamonds$cut, diamonds$color)
diamonds %>%
ggplot(aes(x=cut, fill = color)) +
geom_bar(position = "dodge") +
labs(title = "Composition of Diamond Cut and Color")
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms, fill = color))+
geom_bar(position = "dodge")
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_plot()
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))
# 2.5
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_point()
# Data we are using
data(mpg)
mpg %>%
ggplot(aes(x = displ, y = hwy)) +
geom_point(color = "blue", size = 2, shape = 17, alpha = .5)
mpg %>%
ggplot(aes(x = displ, y = hwy)) +
geom_point(color = "blue", position = "jitter")
# non-mapping aesthetic
mpg %>%
ggplot(aes(x = displ, y = hwy)) +
geom_point(color = "blue")
mpg %>%
ggplot(aes(x = displ, y = hwy)) +
geom_point(color = "blue")
mpg %>%
ggplot(aes(x = displ, y = hwy, color = class)) +
geom_point()
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_point()
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_jitter(width = .2, height = .2)+
labs(title = "Scatter Plot of Full Bathrooms vs. Bedrooms",
x = "Number of Full Bathrooms",
y = "Number of Bedrooms")
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_jitter(width = .2, height = .2)+
scale_x_continuous(breaks = seq(0,12,2))+
scale_y_continuous(breaks = seq(0,6,1))+
labs(title = "Scatter Plot of Full Bathrooms vs. Bedrooms",
x = "Number of Full Bathrooms",
y = "Number of Bedrooms")
# 2.5
housing %>%
mutate(bath_full = floor(bath)) %>%
ggplot(aes(x = bath_full, y = bedrms))+
geom_jitter(width = .2, height = .2)+
scale_x_continuous(breaks = seq(0,6,1))+
scale_y_continuous(breaks = seq(0,12,2))+
labs(title = "Scatter Plot of Full Bathrooms vs. Bedrooms",
x = "Number of Full Bathrooms",
y = "Number of Bedrooms")
housing %>%
ggplot(aes(x = yr_blt, y = trans_value))+
geom_point()+
labs(title = "Year House was Built vs. Value of House",
x = "Year House was Built",
y = "Price ($)")
housing %>%
mutate(group = cut(yr_blt, breaks = c(0, 1900, 1920, 1940, 1960, 1980, 2000,
2010, 2020), labels = c("0-1900",
"1900-1920",
"1920-1940",
"1940-1960",
"1960-1980",
"1980-2000",
"2000-2010",
"2010+"))) %>%
ggplot(aes(x = group, y = trans_value))+
geom_boxplot()+
labs(title = "Year House was Built vs. Value of House",
x = "Year House was Built",
y = "Price ($)")
housing %>%
ggplot(aes(x = as.factor(bedrms), y = sqft))+
geom_boxplot()+
labs(title = "",
x = "Number of Bedrooms",
y = "Squarefoot of House")
housing %>%
ggplot(aes(x = as.factor(bedrms), y = sqft))+
geom_boxplot()+
geom_smooth(aes(x = bedrms, y = sqft), method = 'lm')+
labs(title = "",
x = "Number of Bedrooms",
y = "Squarefoot of House")
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = size, y = bath)) +
geom_point(aes(color = pool)) +
facet_wrap(~ pool) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Home Size (sq ft)",
y = "Number of Bathrooms",
color = "Pool")
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = sqft, y = bath)) +
geom_point(aes(color = pool)) +
facet_wrap(~ pool) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Home Size (sq ft)",
y = "Number of Bathrooms",
color = "Pool")
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = bath, y =  sqft)) +
geom_point(aes(color = pool)) +
facet_wrap(~ pool) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Home Size (sq ft)",
y = "Number of Bathrooms",
color = "Pool")
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = bath, y =  sqft)) +
geom_bar(aes(color = pool)) +
facet_wrap(~ pool) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Home Size (sq ft)",
y = "Number of Bathrooms",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(color = pool)) +
facet_wrap(~ pool) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Home Size (sq ft)",
y = "Number of Bathrooms",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(color = pool)) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Home Size (sq ft)",
y = "Number of Bathrooms",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(color = pool)) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(color = pool, position = position_dodge)) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(position = position_dodge)) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(position = position_dodge())) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(position_dodge()) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(aes(position_dodge())) +
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(position = position_dodge(width = 0.8))+
facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
# 3.3
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y =  sqft)) +
geom_boxplot(position = position_dodge(width = 0.8))+
#facet_wrap(~ pool, nrow = 2) +
labs(title = "Home Size and Number of Bathrooms by if the House has a Pool",
x = "Number of Bathrooms",
y = "Square Footage",
color = "Pool")
housing %>%
mutate(pool = ifelse(pool == 1, "Yes", "No")) %>%
ggplot(aes(x = as.factor(bath), y = sqft, fill = pool)) +
geom_boxplot(position = position_dodge(width = 0.75)) +
labs(title = "Home Size and Number of Bathrooms by Pool Presence",
x = "Number of Bathrooms",
y = "Home Size (sq ft)",
fill = "Pool")
